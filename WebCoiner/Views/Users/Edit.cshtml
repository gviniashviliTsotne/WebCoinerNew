@model WebCoiner.AspNetUser

@{
    ViewBag.Title = "Edit";
}

<section id="home_section" class="section_banner section_gradiant3">


    <div class="container animation animated fadeInUp">


        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="color:white;">User</h4>
                <hr />
                <div class="container_white ">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" , @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EmailConfirmed)
                                    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" , @style = "color:white;"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.PromoCode, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PromoCode, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.PromoCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.TwoFactorEnabled)
                                    @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.LockoutEnabled)
                                    @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Wallet, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Wallet, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.Wallet, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvestmentAmount, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvestmentAmount, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.InvestmentAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentBalance, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:white;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CurrentBalance, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                            @Html.ValidationMessageFor(model => model.CurrentBalance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.AddressToken, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AddressToken, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.AddressToken, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.NotificationResumptionSales, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NotificationResumptionSales, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.NotificationResumptionSales, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.NotificationLatesNews, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NotificationLatesNews, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.NotificationLatesNews, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NotificationUnusualActivity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NotificationUnusualActivity, new { htmlAttributes = new { @class = "input-bordered input-with-hint ng-pristine ng-valid ng-touched" } })
                                @Html.ValidationMessageFor(model => model.NotificationUnusualActivity, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "list", null, new { @class = "btn-link" })
        </div>

    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
